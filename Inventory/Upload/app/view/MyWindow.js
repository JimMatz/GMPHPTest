/*
 * File: app/view/MyWindow.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyWindow', {
    extend: 'Ext.window.Window',
    alias: 'widget.mywindow',

    requires: [
        'MyApp.view.MyWindowViewModel',
        'Ext.form.Panel',
        'Ext.form.field.File',
        'Ext.form.field.Number',
        'Ext.form.field.Checkbox',
        'Ext.button.Button'
    ],

    viewModel: {
        type: 'mywindow'
    },
    autoShow: true,
    height: 195,
    width: 628,
    title: 'Inventory Worksheet Upload',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'form',
            height: 175,
            id: 'formUp',
            width: 600,
            bodyPadding: 10,
            url: '/Gemini/Inventory/Upload.php',
            layout: {
                type: 'table',
                columns: 1
            },
            items: [
                {
                    xtype: 'filefield',
                    width: 508,
                    fieldLabel: 'Count Sheet',
                    name: 'inFile',
                    allowBlank: false
                },
                {
                    xtype: 'numberfield',
                    width: 200,
                    fieldLabel: 'Warehouse',
                    name: 'inWhs',
                    allowBlank: false
                },
                {
                    xtype: 'checkboxfield',
                    id: 'upBatch',
                    fieldLabel: 'Update Batch',
                    name: 'upBatch',
                    inputValue: 'Y'
                },
                {
                    xtype: 'button',
                    text: 'Upload',
                    listeners: {
                        click: 'onButtonClick'
                    }
                }
            ]
        }
    ],

    onButtonClick: function(button, e, eOpts) {
        var form = Ext.getCmp('formUp').getForm('formUp'); // get the form panel
        var params = Ext.urlDecode(location.search.substring(1));


        if (form.isValid()) { // make sure the form contains valid data before submitting
            form.submit({
                params: {
                    DB: params.DB
                },
                waitMsg: 'Uploading your Counts...',
                success: function(form, action) {
                    Ext.Msg.alert('Success', action.result.msg);
                    // Ext.getCmp(winName).close();
                    // Ext.getStore('MyJsonStore').load();
                    open(location, '_parent').close();
                },
                failure: function(form, action) {
                    Ext.Msg.alert('Failed', action.result.msg);
                }
            });
        } else { // display error alert if the data is invalid
            Ext.Msg.alert('Invalid Data', 'Please correct form errors.');
        }

    }

});