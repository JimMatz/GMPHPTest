/*
 * File: app/model/modelReg.js
 *
 * This file was generated by Sencha Architect version 4.2.5.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.model.modelReg', {
    extend: 'Ext.data.Model',

    requires: [
        'Ext.data.field.Date',
        'Ext.data.field.String',
        'Ext.data.field.Number'
    ],

    fields: [
        {
            type: 'int',
            name: 'IVAIV'
        },
        {
            type: 'int',
            name: 'IVSEQ'
        },
        {
            type: 'int',
            name: 'IVBLTO'
        },
        {
            type: 'int',
            name: 'IVCUST'
        },
        {
            type: 'date',
            name: 'IVIVDT'
        },
        {
            type: 'string',
            name: 'IVTRMS'
        },
        {
            type: 'string',
            name: 'CMCTRM'
        },
        {
            type: 'int',
            name: 'DAYSPD'
        },
        {
            type: 'int',
            name: 'AGE_GRP'
        },
        {
            type: 'float',
            name: 'IVIVAM'
        },
        {
            type: 'float',
            name: 'IVNPOS'
        },
        {
            type: 'float',
            name: 'INVDUE'
        },
        {
            type: 'string',
            name: 'CMCNA1'
        },
        {
            type: 'string',
            calculate: function(data) {
                val  = data.CMCNA2;
                if (Ext.String.trim(data.CMCNA3) !== ''){
                    val = val + '<br>' + data.CMCNA3;
                }
                if (Ext.String.trim(data.CMCNA4) !== ''){
                    val = val + '<br>' + data.CMCNA4;
                }
                val = val + '<br>' + Ext.String.trim(data.CMCCTY) + ', ' +  data.CMST + '  ' + data.CMZIP;
                return val;
            },
            name: 'CMADDR'
        },
        {
            type: 'string',
            name: 'CMCNA2'
        },
        {
            type: 'string',
            name: 'CMCNA3'
        },
        {
            type: 'string',
            name: 'CMCNA4'
        },
        {
            type: 'string',
            name: 'CMCCTY'
        },
        {
            type: 'string',
            name: 'CMST'
        },
        {
            type: 'string',
            name: 'CMZIP'
        },
        {
            type: 'string',
            name: 'CMCRGN'
        },
        {
            name: 'SHPNA1'
        },
        {
            calculate: function(data) {
                val  = data.SHPNA2;
                if (Ext.String.trim(data.SHPNA3) !== ''){
                    val = val + '<br>' + data.SHPNA3;
                }
                if (Ext.String.trim(data.SHPNA4) !== ''){
                    val = val + '<br>' + data.SHPNA4;
                }
                val = val + '<br>' + Ext.String.trim(data.SHPCTY) + ', ' +  data.SHPST + '  ' + data.SHPZIP;
                return val;
            },
            name: 'SHPADR'
        },
        {
            name: 'SHPNA2'
        },
        {
            name: 'SHPNA3'
        },
        {
            name: 'SHPNA4'
        },
        {
            name: 'SHPCTY'
        },
        {
            name: 'SHPST'
        },
        {
            name: 'SHPZIP'
        },
        {
            name: 'EVCOUNT'
        },
        {
            name: 'EVDESC'
        },
        {
            name: 'IVD'
        }
    ]
});